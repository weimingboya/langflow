# 看心情自己改改流水线名字
name: build langflow and publish

# 只有推送指定分支或标签才会触发当前流水线
on:
  push:
    branches:
      - dev
    tags:
      - "v*"

# 设置全局可访问的环境变量
env:
  # 推送的容器注册表地址
  AZURE_CR: museland.azurecr.io
  # 必须修改的镜像名称
  IMAGE_NAME: langflow
  # 这是群里 HappyCat 的通知URL，你可自行替换自己生成的机器人URL
  HAPPY_CAT_NOTIFY: https://open.feishu.cn/open-apis/bot/v2/hook/b673247f-5cae-40f0-b1ac-a8c1ff722b2f

# 运行的任务
jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    steps:
      # 生产版本标签规则为 v1.0.0-859a591c6 这种
      # 测试版本统一为 dev 方便快速发布测试
      - name: Set tag name
        run: |
          echo "TAG_NAME=$GITHUB_REF_NAME-${GITHUB_SHA: 0:8}" >> $GITHUB_ENV
          if [ "$GITHUB_REF" == "refs/heads/dev" ]; then
            echo "TAG_NAME=dev" >> $GITHUB_ENV
          fi

      - name: Check out the repo
        uses: actions/checkout@v3

      # 登录容器注册表（添加 secret 具体步骤后面有）
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.AZURE_CR }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # 设置跨平台构建（是 x86_64, arm64 这种CPU架构）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 开始构建镜像
      - name: Build Docker image and Publish
        uses: docker/build-push-action@v3
        with:
          # 可写多个构建标签，生成多个版本镜像
          tags: |
            ${{ env.AZURE_CR }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
          pull: true
          push: true
          cache-to: type=gha
          cache-from: type=gha

      # 在飞书群里通知构建好了，测试版本不通知
      - name: Notify group members
        run: |
          if [ "${{ env.TAG_NAME }}" != "dev" ] ; then
            NOTIFY_MESSAGE="构建好了哟 喵~\n容器镜像: ${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}\n发起人: ${GITHUB_ACTOR}\n提交时SHA: ${GITHUB_SHA}"
            curl -v ${{ env.HAPPY_CAT_NOTIFY }} \
              -H "content-type: application/json" \
              -d "{\"msg_type\":\"text\",\"content\":{\"text\":\"${NOTIFY_MESSAGE}\"}}"
          fi